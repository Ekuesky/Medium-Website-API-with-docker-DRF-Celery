#!/usr/bin/env bash

#Exit immediately if a command exits with a non-zero status.
set -o errexit
#The return value of a pipeline is the status of the last command to exit with a non-zero status, or zero if no command exited with a non-zero status
set -o pipefail
#Treat unset variables and parameters as an error when performing parameter expansion.
set -o nounset

# get the current working directory, in our case maintenance folder
working_dir="$(dirname ${0})"

# import the constants and messages file
source "${working_dir}/_src/constants.sh"
source "${working_dir}/_src/messages.sh"

message_welcome "Backing up the '${POSTGRES_DB}' database..."

if [[ "${POSTGRES_USER}" == "postgres" ]]; then
  message_error "Backing up as 'postgres' user is not allowed. Assign 'POSTGRES_USER' env with another one and try again."
  exit 1
fi

export PGHOST="${POSTGRES_HOST}"
export PGPORT="${POSTGRES_PORT}"
export PGUSER="${POSTGRES_USER}"
export PGPASSWORD="${POSTGRES_PASSWORD}"
export PGDATABASE="${POSTGRES_DB}"


backup_filename="${PREFIX}_$(date +'%Y_%m_%dT%H_%M_%S').sql.gz"

pg_dump | gzip > "${BACKUP_DIR}/${backup_filename}"

message_success "'${POSTGRES_DB}' database backup '${backup_filename}' has been created successfully and place in '${BACKUP_DIR}'"